<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>mattdietz.net (SFML)</title><link>http://mattdietz.net/</link><description></description><language>en</language><lastBuildDate>Sun, 22 Feb 2015 13:29:53 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Compiling SFML for broader OS/X compatibility</title><link>http://mattdietz.net/posts/compiling-sfml-for-broader-osx-compatibility.html</link><dc:creator>Matt Dietz</dc:creator><description>&lt;p&gt;I recently competed in Ludum Dare 27, and one of the biggest struggles I had was making an application I built on the command line on my machine actually run for others. The first sign that I should have considered alternative frameworks was when I could only get SFML to link properly into my game when I built it from bleeding edge source. However, I'd been trucking along just fine using the compiled dylibs. I had been assuming the entire time that it was sufficient to include code and instructions for building the project yourself, but when the barrier to entry is too high, people will simply prefer all the Unity and HTML5 Canvas games. It's hard to blame them, really.&lt;/p&gt;
&lt;p&gt;So, I set out to figure out how to package up SFML with my binary and ship it. After stumbling through a bunch of mediocre attempts to include the SFML dylibs in the zip file I submitted ot the competition, I finally realized the only thing left to do was construct a Mac app bundle.&lt;/p&gt;
&lt;p&gt;Enter XCode.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://mattdietz.net/posts/compiling-sfml-for-broader-osx-compatibility.html"&gt;Read moreâ€¦&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;</description><category>C++</category><category>OSX</category><category>SFML</category><category>game programming</category><category>games</category><guid>http://mattdietz.net/posts/compiling-sfml-for-broader-osx-compatibility.html</guid><pubDate>Mon, 26 Aug 2013 21:04:39 GMT</pubDate></item></channel></rss>